# Fetch full history + tags so manual runs can find the latest tag
clone:
  git:
    image: woodpeckerci/plugin-git
    settings:
      depth: 0
      tags: true
    when:
      - event: manual
      - event: tag
      - event: push
        branch: [development, main]

steps:
  # ---------- DEV IMAGE (frontend:dev) ----------
  docker-build-dev:
    image: woodpeckerci/plugin-docker-buildx
    settings:
      # Publish to GHCR
      registry: ghcr.io
      repo: ghcr.io/frostwalk/frontend
      tags: dev
      dockerfile: Dockerfile
      # Link image to the source repository (OCI label)
      labels:
        - org.opencontainers.image.source=https://github.com/FrostWalk/Frontend
        - org.opencontainers.image.licenses=MIT
      # Also add the plugin's default git-derived labels (version, revision, etc.)
      default_labels: true
      # GHCR auth
      username:
        from_secret: GHCR_USERNAME
      password:
        from_secret: GHCR_TOKEN
    when:
      # Build on pushes to the development branch…
      - event: push
        branch: development
      # …and also when run manually
      - event: manual
        branch: development

  # ---------- DISCOVER RELEASE TAG ----------
  compute-release-tag:
    image: alpine/git:latest
    commands:
      - set -e
      - |
        # Skip unless it's a tag event or a manual run on main
        if [ "$CI_PIPELINE_EVENT" = "manual" ] && [ "$CI_COMMIT_BRANCH" != "main" ]; then
          echo "Skipping release: manual run not on main branch."
          exit 0
        fi

        if [ "$CI_PIPELINE_EVENT" = "tag" ] && [ -n "$CI_COMMIT_TAG" ]; then
          TAG="$CI_COMMIT_TAG"
        elif [ -n "${OVERRIDE_TAG:-}" ]; then
          TAG="$OVERRIDE_TAG"
        else
          # Use the newest existing tag from the clone (no network)
          TAG="$(git describe --tags --abbrev=0 2>/dev/null || git tag --sort=-creatordate | head -n1 || true)"
          if [ -z "$TAG" ]; then
            echo "No git tags found. On manual runs provide OVERRIDE_TAG (e.g., v1.0.0)." >&2
            exit 1
          fi
        fi

        printf "%s\n%s\n" "$TAG" "latest" > .tags
        echo "Release tags:"
        cat .tags
    when:
      - event: tag
      - event: manual
        branch: main

  # ---------- RELEASE IMAGE (frontend:<tag> and :latest) ----------
  docker-build-release:
    image: woodpeckerci/plugin-docker-buildx
    depends_on: [compute-release-tag]
    settings:
      registry: ghcr.io
      repo: ghcr.io/frostwalk/frontend
      tags_file: .tags
      dockerfile: Dockerfile
      labels:
        - org.opencontainers.image.source=https://github.com/FrostWalk/Frontend
        - org.opencontainers.image.licenses=MIT
      default_labels: true
      username:
        from_secret: GHCR_USERNAME
      password:
        from_secret: GHCR_TOKEN
    when:
      - event: tag
      - event: manual
        branch: main

  # ---------- TRIGGER UPGRADE ----------
  trigger-watchtower:
    image: curlimages/curl:latest
    depends_on:
      - docker-build-dev
      - docker-build-release
    environment:
      WT_URL: https://wt.advancedprogramming.ovh/v1/update
      WT_TOKEN:
        from_secret: WATCHTOWER_TOKEN
    commands:
      - 'curl -fsS -X POST -H "Authorization: Bearer $${WT_TOKEN}" "$WT_URL"'
    when:
      - event: manual
      - event: tag
      - event: push
        branch: [development, main]
